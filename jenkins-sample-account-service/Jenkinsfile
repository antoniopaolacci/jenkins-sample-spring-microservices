pipeline {   
    
	agent any    
	
	triggers {
	    pollSCM '* * * * *'
	}
	
	parameters {
        choice(
            choices: ['greeting' , 'silence'],
            description: '',
            name: 'REQUESTED_ACTION')
    }
	
	stages { 
	    stage('Build') {
	        steps {
	            sh 'mvn clean install -DskipTests'
	        }
	    }
	    stage('Test') {
	        steps {
	            sh 'mvn test -Dspring.profiles.active=dev'
	        }
	    }
	    stage('Build Docker Image') {
	    	steps {
	    		// You can try to use groovy scripting syntax into the declarative pipeline. 
	    		// For some step there is no declarative syntax yet.
	    		script {
	        		docker.build "antoniopaolacci/jenkins-sample-account-service:1.0"
	        	}
	        }
	    }
	    stage ('Run Docker Container') {
	    	steps {
	    		script {
	    			try {
	        			docker.image("antoniopaolacci/jenkins-sample-account-service:1.0").run('-p 2222:2222 -h account --name account --link discovery')
	        			} catch (err) {
	  						echo "Container already created."
						}
	        	}
	        }
	    }
	    stage('Push Docker Image') {

			when {
                // Only say hello if a "greeting" is requested
                expression { params.REQUESTED_ACTION == 'greeting' }
            }
			steps {
				
				echo "Trying to Push Docker Build to DockerHub..."
			
				script {
		        	docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
		            app.push("latest")
		        	}
	      		}
	        }   
	    }  
	}
    
}